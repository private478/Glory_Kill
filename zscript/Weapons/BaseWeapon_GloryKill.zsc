// not used

extend class PB_WeaponBase
{
    States
    {
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Glory Kill
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			
			
		DoFatality:
			TNT1 A 0 A_JumpIfInventory("GoFatality",1,"DoingFatality");
			TNT1 A 0 A_Takeinventory("Fear",1);
			TNT1 A 0
			{
				if(GetCvar("be_Protection") == 1)
				{
					A_Giveinventory("Superarmor",1);
				}
			}
			"####" "#" 0 { return ResolveState("Steady"); }
			
		DoingFatality:
			TNT1 A 1 SetPlayerProperty(0,1,0);
			TNT1 A 0
			{
				if(GetCvar("be_Protection") == 1)
				{
					A_Giveinventory("Superarmor",1);
				}
			}
			TNT1 A 0 {PB_SetUsingMelee(false);}
			"####" "#" 0 { return ResolveState("DoFatality"); }
			
		PermormGloryKill:
			TNT1 A 0
			{
				A_StartSound("GloryKill", CHAN_UI);
				if(GetCvar("be_Protection") == 1)
				{
					A_Giveinventory("Superarmor",1);
				}
				if(GetCvar("be_Fear") == 1)
				{
					A_Giveinventory("Fear",1);
				}
			}
			TNT1 A 0 {PB_SetUsingMelee(false);}
			TNT1 A 0 A_CustomPunch(10000,1,0,"GloryKillPuff",150,0,0);
			TNT1 A 0;
			"####" "#" 0 { return ResolveState("DoFatality"); }
		
		/////////////////////////////////////////////////////////////////////////////////////////////
		// Glory Melee
		////////////////////////////////////////////////////////////////////////////////////////////
		
		GloryMelee:
			SAWG G 0
			{	
				if(CountInv("CrucibleEnergy") > 0)
				{
					A_TakeInventory("Zoomed",1);
					A_ZoomFactor(1.0);
					A_TakeInventory("ADSmode",1);
					A_StopSound(1);
					A_StopSound(6);
					return ResolveState("Crucible");
				}
					A_Print("Not Enough Energy");
					A_StartSound("Beep");
					A_TakeInventory("DoGloryMelee",1);
					return ResolveState(null);
			}
			Goto GoingToReady;
			
		
		/////////////////////////////////////////////////////////////////////////////////////////////
		// Blood Punch
		////////////////////////////////////////////////////////////////////////////////////////////
		
		BloodPunch:
			SCL0 A 0 A_ClearOverlays(-5, 80);
			SCL0 A 0 A_GunFlash("Null");
			SCL0 A 0 A_StopSound(1);
			SCL0 A 0 A_StopSound(6);
			P1NK ABCD 1 {
				if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NK");}
				if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NK");}
				if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NK");}
				A_SetRoll(roll+2);
			}
			TNT1 A 1 A_SetRoll(roll+2);
			TNT1 A 2;
			TNT1 A 0 A_StartSound("weapons/ultrwhoosh", 5);
			P1NK EF 1 {
				if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NK");}
				if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NK");}
				if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NK");}
				A_SetRoll(roll-2);
			}
			TNT1 A 0 {
					A_Saw("", "player/cyborg/fist", 120, "BloodPunchPuff", SF_NOPULLIN | SF_NOTURN , 128);
			}
			P1NK G 1 {
				if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NK");}
				if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NK");}
				if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NK");}
			}
			P1NK HIJKLMNO 1 {
				if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NK");}
				if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NK");}
				if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NK");}
				A_SetRoll(roll-1);
				}
			P1NK O 1 {
				if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NK");}
				if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NK");}
				if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NK");}
			}
			P1NK PQ 1 {
				if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NK");}
				if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NK");}
				if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NK");}
				A_SetRoll(roll+2);
			}
			TNT1 A 0 A_SetRoll(0);
			TNT1 A 0 {
				if(CountInv("BloodPunchKilled"))
				{
					A_StartSound("BloodPunch", CHAN_AUTO);
					A_TakeInventory("BloodPunchKilled");
					A_TakeInventory("BPtoken");
					A_Explode(125, 200, 0, true, 200 ,0 ,0, "BPImpactPuff", "BloodPunch");
				}
			}
			TNT1 A 0 {PB_SetUsingMelee(false);}
			TNT1 A 0 A_TakeInventory("DoGloryMelee", 1);
			TNT1 A 1 A_Raise;
			Goto GoingToReady;
		
		
		/////////////////////////////////////////////////////////////////////////////////////////////
		// Crucible
		////////////////////////////////////////////////////////////////////////////////////////////
			
		Crucible:
			SCL0 A 0 A_ClearOverlays(-5, 80);
			SCL0 A 0 A_GunFlash("Null");
			CRCB A 1 A_StartSound("Crucible_Select", CHAN_WEAPON, CHANF_OVERLAP);
			CRCB AABBCCJJ 2 bright A_WeaponOffset(-1, 2, WOF_ADD);
			CRCB D 1 bright
			{
				A_StartSound("Crucible_Deploy", CHAN_WEAPON, CHANF_OVERLAP);
				A_WeaponOffset(-2, 4, WOF_ADD);
				A_TakeInventory("CrucibleEnergy",1);
			}
			CRCB D 3 bright A_WeaponOffset(-2, 4, WOF_ADD);//-10, 20
			CRCB DDD 1 bright A_WeaponOffset(3, -6, WOF_ADD);
			CRCB D 1 bright A_WeaponOffset(0.5, 4, WOF_ADD);
			Goto HoldCrucible;
			
		HoldCrucible:	
			CRCB D 1 bright A_StartSound("Crucible_Idle",10,CHANF_LOOP|CHANF_OVERLAP,0.2);
			CRCB D 1 bright
			{
				A_WeaponReady();
				if (!countinv("DoGloryMelee"))
				{
					return ResolveState("DoCrucible");
				}
				return ResolveState(null);
			}
			Goto HoldCrucible+1;
			
		DoCrucible:
			CRCB D 1 
			{
				A_StartSound("Crucible_Swing", CHAN_WEAPON, CHANF_OVERLAP);
				A_WeaponOffset(10,2, WOF_ADD);
			}
			CRCB D 1 A_WeaponOffset(20, 4, WOF_ADD);
			CRCB D 1 A_WeaponOffset(30, 6, WOF_ADD);
			CRCB D 1 A_WeaponOffset(40, 8, WOF_ADD);
			CRCB D 1 A_WeaponOffset(50,10, WOF_ADD);
			CRCB D 1 A_WeaponOffset(60,12, WOF_ADD);
			TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
			
			//First Swing
			
			CRCB EEF 1 
			{
				A_Saw("", "Crucible_Slice", 300, "CruciblePuff", SF_NOPULLIN | SF_NOTURN , 150, 32);
			}
			CRCB G 1
			{
				A_WeaponOffset(-40, 0, WOF_ADD);
				A_Saw("", "Crucible_Slice", 300, "CruciblePuff", SF_NOPULLIN | SF_NOTURN , 150, 32);
				A_SpawnItemEx("CrucibleBladeWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH);
			}
			
			TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
			
			CRCB HII 1 
			{
				A_WeaponOffset(-40, 8, WOF_ADD);
				A_Saw("", "Crucible_Slice", 300, "CruciblePuff", SF_NOPULLIN | SF_NOTURN , 150, 32);
			}
			CRCB D 0 A_WeaponOffset(325, 24, WOF_ADD);
			
			NULL A 10;
			
			TNT1 A 0
			{
				A_TakeInventory("DoGloryMelee",1);
			}
			
			CRCB D 1 A_WeaponOffset(-60, -12, WOF_ADD);
			CRCB D 1 A_WeaponOffset(-50, -10, WOF_ADD);
			CRCB D 1 A_WeaponOffset(-40, -8, WOF_ADD);
			CRCB D 1 A_WeaponOffset(-30, -6, WOF_ADD);
			CRCB D 1 A_WeaponOffset(-20, -4, WOF_ADD);
			
			CRCB D 1 bright A_WeaponOffset(-0.5, -4, WOF_ADD);
			CRCB DDD 1 bright A_WeaponOffset(-3, 6, WOF_ADD);
			CRCB D 3 bright A_WeaponOffset(2, -4, WOF_ADD);
			
			CRCB D 1 bright A_WeaponOffset(2, -4, WOF_ADD);
			
			CRCB JJCCBBAA 2 bright A_WeaponOffset(1, -2, WOF_ADD);
			CRCB A 1 A_StopSound(10);
			CRCB A 1 A_StartSound("Crucible_Deselect", CHAN_WEAPON, CHANF_OVERLAP);
			CRCB A 5;
			TNT1 A 1 A_Raise;
			Goto GoingToReady;
			
		/////////////////////////////////////////////////////////////////////////////////////////////
		// Shoulder Cannon
		////////////////////////////////////////////////////////////////////////////////////////////
			
		FireShoulderCannon:
			TNT1 A 0
			{	
				if(CountInv("FlameBelchSelected") > 0)
				{
					A_TakeInventory("Zoomed",1);
					A_ZoomFactor(1.0);
					A_TakeInventory("ADSmode",1);
					A_StopSound(CHAN_WEAPON);
					A_StopSound(CHAN_6);
					return ResolveState("FireFlameBelch");
				}
				if(CountInv("IceBombSelected") > 0)
				{
					A_TakeInventory("Zoomed",1);
					A_ZoomFactor(1.0);
					A_TakeInventory("ADSmode",1);
					A_StopSound(CHAN_WEAPON);
					A_StopSound(CHAN_6);
					return ResolveState("FireIceBomb");
				}
				return ResolveState(null);
			}
			TNT1 A 0 A_StartSound("Equip_notready");
			TNT1 A 0 A_TakeInventory("DoShoulderCannon", 1);
			Goto GoingToReady;
			
		FireFlameBelch:
			TNT1 A 0
			{
				if (countinv("Gas") < 50)
				{
					return ResolveState("EmptyCannon");
				}
				A_TakeInventory("Zoomed",1);
				A_ZoomFactor(1.0);
				A_TakeInventory("ADSmode",1);
				return ResolveState(null);
			}
			SCL0 A 0 A_ClearOverlays(-5, 80);
			SCL0 A 0 A_GunFlash("Null");
			SCL0 ABCD 1 A_StartSound("Flamethrower/Charge",1);
			SCL0 EFGHIJ 1;
			SCL0 K 1 A_Quake(8, 8, 0, 32);
			TNT1 A 0 A_Recoil (4);
			TNT1 A 0 A_StartSound("Flamebelch", 1);
			SCF0 A 5 bright A_GunFlash;
			TNT1 A 0 A_AlertMonsters;
			TNT1 A 0 A_TakeInventory("Gas",50);
			SCF0 BCDBCDBCD 1 bright {
				A_FireCustomMissile("GloryFireMissile", -3, 0, Random(-20, -10), 12, FPF_NOAUTOAIM, -10);
			}
			SCF0 EF 1;
			SCL0 KJIHGFEDCBA 1;
			TNT1 A 0 A_TakeInventory("DoShoulderCannon", 1);
			TNT1 A 1 A_Raise;
			Goto GoingToReady;
			
		FireIceBomb:
			TNT1 A 0 {
				if (countinv("RocketAmmo") < 1)
				{
					return ResolveState("EmptyCannon");
				}
				A_TakeInventory("Zoomed",1);
				A_ZoomFactor(1.0);
				A_TakeInventory("ADSmode",1);
				return ResolveState(null);
			}
			SCL0 A 0 A_ClearOverlays(-5, 80);
			SCL0 A 0 A_GunFlash("Null");
			SCL0 ABCD 1 A_StartSound("Flamethrower/Charge",1);
			SCL0 EFGHIJ 1;
			SCL0 K 1 A_Quake(8, 8, 0, 32);
			TNT1 A 0 A_Recoil (4);
			SCF0 A 3 bright A_GunFlash;
			TNT1 A 0 A_AlertMonsters;
			TNT1 A 0 A_TakeInventory("RocketAmmo",1);
			SCF0 BC 1 bright;
			SCFG D 1 bright {
				A_StartSound ("weapons/firegrenade", CHAN_WEAPON);
				A_FireCustomMissile("SC_CryoGrenade", -1, 0, Random(-17, -13), 12, FPF_NOAUTOAIM, -10);
			}
			SCF0 EF 1;
			SCL0 KJIHGFEDCBA 1;
			TNT1 A 0 A_TakeInventory("DoShoulderCannon", 1);
			TNT1 A 1 A_Raise;
			Goto GoingToReady;
			
		EmptyCannon:
			TNT1 A 0 A_StopSoundEx("Weapon");
			TNT1 A 0 A_StartSound("Equip_notready");
			TNT1 A 0 A_TakeInventory("DoShoulderCannon", 1);
			Goto GoingToReady;
			
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Glory Kill End
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
    }
}