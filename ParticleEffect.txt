enum 
{
	MasterPtr = 			AAPTR_MASTER,
	NullPtr =			AAPTR_NULL,
	TracerPtr = 			AAPTR_TRACER,
	TargetPtr =			AAPTR_TARGET,
	DefPtr =			AAPTR_DEFAULT,
	RadiusPull = 				192,
	DelayVacuum =				20,
	PSpeed = 					12
};

ACTOR Fear : PowerFrightener
{
  +NEVERTARGET
  +NOTARGET
  +FRIGHTENING
  Powerup.Duration -10
}
ACTOR Superarmor : PowerInvulnerable
{
  Powerup.Duration 35
  Powerup.Mode Reflective
}

ACTOR Superarmorsmall : PowerInvulnerable
{
  Powerup.Duration -1
  Powerup.Mode Reflective
}

Actor GreenPinataParticles
{
	var int user_t;
	var int user_count;
	var float user_pitch;
	var float user_dist;
	const int Increment = 4;
	const int Distance = 200;
	Radius 1
	Height 1
	+NOINTERACTION
	+NOTONAUTOMAP
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			Thing_ChangeTID(0,0);
		}
	Looping:
		TNT1 A 1
		{
			if (IsPointerEqual(MasterPtr,NullPtr))	{ return state("Null");	}
			if (GetCvar(PinataParticles))
			{
				if (GetDistance(true,MasterPtr) >= Increment && !A_CheckSight("Null"))
				{	
					A_FaceMaster(0,0,0,0,FAF_MIDDLE);
					user_dist = GetDistance(true,MasterPtr);
					return state("Making");
				}
				A_Warp(MasterPtr,0,0,0,0,WARPF_NOCHECKPOSITION,"Null",0.5);
			}
			else
			{	A_SetTics(35);	}
			return state(0);
		}
		Loop
	Making:
		TNT1 A 1 
		{
			user_count = 0;
			while ((user_count < Min(user_dist,Distance)) && !A_CheckSight("Null"))
			{
				A_SpawnParticle(00FF00,SPF_FULLBRIGHT|SPF_RELATIVE,25,8,0,cos(-pitch)*user_count,0,sin(pitch)*user_count); 
				user_count += Increment;
			}
			A_Warp(MasterPtr,0,0,0,0,WARPF_NOCHECKPOSITION,"Null",0.5);
		}
		Goto Looping
	}
}

Actor BluePinataParticles
{
	var int user_t;
	var int user_count;
	var float user_pitch;
	var float user_dist;
	const int Increment = 4;
	const int Distance = 200;
	Radius 1
	Height 1
	+NOINTERACTION
	+NOTONAUTOMAP
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			Thing_ChangeTID(0,0);
		}
	Looping:
		TNT1 A 1
		{
			if (IsPointerEqual(MasterPtr,NullPtr))	{ return state("Null");	}
			if (GetCvar(PinataParticles))
			{
				if (GetDistance(true,MasterPtr) >= Increment && !A_CheckSight("Null"))
				{	
					A_FaceMaster(0,0,0,0,FAF_MIDDLE);
					user_dist = GetDistance(true,MasterPtr);
					return state("Making");
				}
				A_Warp(MasterPtr,0,0,0,0,WARPF_NOCHECKPOSITION,"Null",0.5);
			}
			else
			{	A_SetTics(35);	}
			return state(0);
		}
		Loop
	Making:
		TNT1 A 1 
		{
			user_count = 0;
			while ((user_count < Min(user_dist,Distance)) && !A_CheckSight("Null"))
			{
				A_SpawnParticle(29C9FF,SPF_FULLBRIGHT|SPF_RELATIVE,25,8,0,cos(-pitch)*user_count,0,sin(pitch)*user_count);
				user_count += Increment;
			}
			A_Warp(MasterPtr,0,0,0,0,WARPF_NOCHECKPOSITION,"Null",0.5);
		}
		Goto Looping
	}
}

Actor RedPinataParticles
{
	var int user_t;
	var int user_count;
	var float user_pitch;
	var float user_dist;
	const int Increment = 4;
	const int Distance = 200;
	Radius 1
	Height 1
	+NOINTERACTION
	+NOTONAUTOMAP
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			Thing_ChangeTID(0,0);
		}
	Looping:
		TNT1 A 1
		{
			if (IsPointerEqual(MasterPtr,NullPtr))	{ return state("Null");	}
			if (GetCvar(PinataParticles))
			{
				if (GetDistance(true,MasterPtr) >= Increment && !A_CheckSight("Null"))
				{	
					A_FaceMaster(0,0,0,0,FAF_MIDDLE);
					user_dist = GetDistance(true,MasterPtr);
					return state("Making");
				}
				A_Warp(MasterPtr,0,0,0,0,WARPF_NOCHECKPOSITION,"Null",0.5);
			}
			else
			{	A_SetTics(35);	}
			return state(0);
		}
		Loop
	Making:
		TNT1 A 1 
		{
			user_count = 0;
			while ((user_count < Min(user_dist,Distance)) && !A_CheckSight("Null"))
			{
				A_SpawnParticle(FF2846,SPF_FULLBRIGHT|SPF_RELATIVE,25,8,0,cos(-pitch)*user_count,0,sin(pitch)*user_count);
				user_count += Increment;
			}
			A_Warp(MasterPtr,0,0,0,0,WARPF_NOCHECKPOSITION,"Null",0.5);
		}
		Goto Looping
	}
}

Actor YellowPinataParticles
{
	var int user_t;
	var int user_count;
	var float user_pitch;
	var float user_dist;
	const int Increment = 4;
	const int Distance = 200;
	Radius 1
	Height 1
	+NOINTERACTION
	+NOTONAUTOMAP
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			Thing_ChangeTID(0,0);
		}
	Looping:
		TNT1 A 1
		{
			if (IsPointerEqual(MasterPtr,NullPtr))	{ return state("Null");	}
			if (GetCvar(PinataParticles))
			{
				if (GetDistance(true,MasterPtr) >= Increment && !A_CheckSight("Null"))
				{	
					A_FaceMaster(0,0,0,0,FAF_MIDDLE);
					user_dist = GetDistance(true,MasterPtr);
					return state("Making");
				}
				A_Warp(MasterPtr,0,0,0,0,WARPF_NOCHECKPOSITION,"Null",0.5);
			}
			else
			{	A_SetTics(35);	}
			return state(0);
		}
		Loop
	Making:
		TNT1 A 1 
		{
			user_count = 0;
			while ((user_count < Min(user_dist,Distance)) && !A_CheckSight("Null"))
			{
				A_SpawnParticle(FFED29,SPF_FULLBRIGHT|SPF_RELATIVE,25,8,0,cos(-pitch)*user_count,0,sin(pitch)*user_count);
				user_count += Increment;
			}
			A_Warp(MasterPtr,0,0,0,0,WARPF_NOCHECKPOSITION,"Null",0.5);
		}
		Goto Looping
	}
}

Actor PinkPinataParticles
{
	var int user_t;
	var int user_count;
	var float user_pitch;
	var float user_dist;
	const int Increment = 4;
	const int Distance = 200;
	Radius 1
	Height 1
	+NOINTERACTION
	+NOTONAUTOMAP
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			Thing_ChangeTID(0,0);
		}
	Looping:
		TNT1 A 1
		{
			if (IsPointerEqual(MasterPtr,NullPtr))	{ return state("Null");	}
			if (GetCvar(PinataParticles))
			{
				if (GetDistance(true,MasterPtr) >= Increment && !A_CheckSight("Null"))
				{	
					A_FaceMaster(0,0,0,0,FAF_MIDDLE);
					user_dist = GetDistance(true,MasterPtr);
					return state("Making");
				}
				A_Warp(MasterPtr,0,0,0,0,WARPF_NOCHECKPOSITION,"Null",0.5);
			}
			else
			{	A_SetTics(35);	}
			return state(0);
		}
		Loop
	Making:
		TNT1 A 1 
		{
			user_count = 0;
			while ((user_count < Min(user_dist,Distance)) && !A_CheckSight("Null"))
			{
				A_SpawnParticle(FF83FF,SPF_FULLBRIGHT|SPF_RELATIVE,25,8,0,cos(-pitch)*user_count,0,sin(pitch)*user_count);
				user_count += Increment;
			}
			A_Warp(MasterPtr,0,0,0,0,WARPF_NOCHECKPOSITION,"Null",0.5);
		}
		Goto Looping
	}
}

Actor GoldPinataParticles
{
	var int user_t;
	var int user_count;
	var float user_pitch;
	var float user_dist;
	const int Increment = 4;
	const int Distance = 200;
	Radius 1
	Height 1
	+NOINTERACTION
	+NOTONAUTOMAP
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			Thing_ChangeTID(0,0);
		}
	Looping:
		TNT1 A 1
		{
			if (IsPointerEqual(MasterPtr,NullPtr))	{ return state("Null");	}
			if (GetCvar(PinataParticles))
			{
				if (GetDistance(true,MasterPtr) >= Increment && !A_CheckSight("Null"))
				{	
					A_FaceMaster(0,0,0,0,FAF_MIDDLE);
					user_dist = GetDistance(true,MasterPtr);
					return state("Making");
				}
				A_Warp(MasterPtr,0,0,0,0,WARPF_NOCHECKPOSITION,"Null",0.5);
			}
			else
			{	A_SetTics(35);	}
			return state(0);
		}
		Loop
	Making:
		TNT1 A 1 
		{
			user_count = 0;
			while ((user_count < Min(user_dist,Distance)) && !A_CheckSight("Null"))
			{
				A_SpawnParticle(FFED29,SPF_FULLBRIGHT|SPF_RELATIVE,25,8,0,cos(-pitch)*user_count,0,sin(pitch)*user_count);
				user_count += Increment;
			}
			A_Warp(MasterPtr,0,0,0,0,WARPF_NOCHECKPOSITION,"Null",0.5);
		}
		Goto Looping
	}
}