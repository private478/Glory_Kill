ACTOR PB_BaronGK : PB_Baron Replaces PB_Baron
{
	DropItem "DemonStrengthRune" 9
	DropItem "Demonpickup2" 76
	DropItem "Demonpickup2" 76
	DropItem "Crucible" 4
	WoundHealth 220
	
	States
	{
	Wound:
		"####" "#" 1
		{
			if(GetCvar("be_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("BaronHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the monster heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
					A_GiveToTarget("BloodPunchKilled",1); // Check BloodPunch
				}
				
				if(GetCvar(be_MonsterStagger)==1) //will the monsters stagger at all?
				{
					return state("Stagger");	//stays there for a few seconds
				}
				else
				{
					return state(0);
				}
			}
			return state(0);
		}
		Goto See
	Stagger:
		BOSS H 0 
		{
			if(getcvar(be_ExecutionHighlight)==1)
			{	return state("PrepareStaggerHighlight");}
			else
			{	return state("StagLooper");	}
		}
		Goto StagLooper
	PrepareStaggerHighlight:
		//RFTR X 0
		BGSS H 0
		Goto StagLooper
	
	StagLooper:
		"####" "#" 4
		{
			if(!countinv("FinisherToken"))
			{
				return state("See");
			}
			if(getcvar(be_NoisyStagger) && countinv("PainSoundToken"))
			{ 
				A_Pain; 
				A_TakeInventory("PainSoundToken");
			}
			return state(0);
		}
		"####" "#" 0 A_SpawnItem("HeadshotTarget4b", 0, 66,0)
		"####" "#" 0
		Loop
	
	Death.GloryKill:
		TNT1 A 0 A_GiveToTarget("BPtoken",3)
		Goto Death.Fatality	
	
	Death.Crucible:
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataMed",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.cut
	
	Death.GloryFire:
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawnHigh",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.Flames
	
	Pain.GloryFire:
		TNT1 A 0 A_Jump(192, "See")
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawnHigh",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto See
	
	Death.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataMed",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.ExtremePunches
	
	Pain.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		Goto Super::Pain.ExtremePunches
		
	Death.Fatality:
	    TNT1 A 0
		TNT1 A 0 A_Pain
		TNT1 A 0 A_SpawnItemEx("GloryMedPinataSpawn2",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		TNT1 A 0 A_GiveToTarget("GoFatality", 1)
        TNT1 A 0 A_GiveToTarget("BaronFatality", 1)
        TNT1 A 1 A_NoBlocking
        TNT1 A 0 A_BossDeath
		Stop	
	}
}

ACTOR PB_BelphegorGK : PB_Belphegor replaces PB_Belphegor
{
	DropItem "Demonpickup2" 76
	DropItem "Demonpickup2" 76
	DropItem "Demonpickup2" 76
	DropItem "Crucible" 12
	WoundHealth 260
   
	States
	{
	Wound:
	"####" "#" 1
		{
			if(GetCvar("be_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("BaronHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the monster heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
					A_GiveToTarget("BloodPunchKilled",1); // Check BloodPunch
				}
				
				if(GetCvar(be_MonsterStagger)==1) //will the monsters stagger at all?
				{
					return state("Stagger");	//stays there for a few seconds
				}
				else
				{
					return state(0);
				}
			}
			return state(0);
		}
		Goto See
	Stagger:
		BOS3 E 0 
		{
			if(getcvar(be_ExecutionHighlight)==1)
			{	return state("PrepareStaggerHighlight");}
			else
			{	return state("StagLooper");	}
		}
		Goto StagLooper
	PrepareStaggerHighlight:
		//RFTR X 0
		BGS3 E  3
		Goto StagLooper
	
	StagLooper:
		"####" "#" 4
		{
			if(!countinv("FinisherToken"))
			{
				return state("See");
			}
			if(getcvar(be_NoisyStagger) && countinv("PainSoundToken"))
			{ 
				A_Pain; 
				A_TakeInventory("PainSoundToken");
			}
			return state(0);
		}
		"####" "#" 0 A_SpawnItem("HeadshotTarget4b", 0, 66,0)
		"####" "#" 0
		Loop
	
	Death.GloryKill:
		TNT1 A 0 A_GiveToTarget("BPtoken",4)
		Goto Death.Fatality
		
	Death.Crucible:
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataMed",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.cut	
	
	Death.GloryFire:
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawnHigh",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.GreenFire
	
	Pain.GloryFire:
		TNT1 A 0 A_Jump(192, "See")
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawnHigh",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto See
	
	Death.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataHight",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.ExtremePunches
	
	Pain.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		Goto Super::Pain.Stun
		
	Death.Fatality:
		TNT1 A 0 A_SpawnItemEx("GloryHightPinataSpawn2",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		TNT1 A 0 A_GiveToTarget("GoFatality", 1)
        TNT1 A 0 A_GiveToTarget("BelphegorFatality", 1)
        TNT1 A 1 A_NoBlocking
        TNT1 A 0 A_BossDeath
		Stop	
	}
}

ACTOR PB_CyberBaronGK: PB_CyberBaron replaces PB_CyberBaron
{
	DropItem "DemonStrengthRune" 9
	DropItem "HasteSphere" 8
	DropItem "DoubleSphere" 7
	DropItem "Crucible" 4
	WoundHealth 250
	
	States
	{
	Wound:
		"####" "#" 1
		{
			if(GetCvar("be_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("HellKnightHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the monster heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
					A_GiveToTarget("BloodPunchKilled",1); // Check BloodPunch
				}
				
				if(GetCvar(be_MonsterStagger)==1) //will the monsters stagger at all?
				{
					return state("Stagger");	//stays there for a few seconds
				}
				else
				{
					return state(0);
				}
			}
			return state(0);
		}
		Goto See
	Stagger:
		CBOS H 0 
		{
			if(getcvar(be_ExecutionHighlight)==1)
			{	return state("PrepareStaggerHighlight");}
			else
			{	return state("StagLooper");	}
		}
		Goto StagLooper
	PrepareStaggerHighlight:
		//RFTR X 0
		CBGS H 2
		Goto StagLooper
	
	StagLooper:
		"####" "#" 4
		{
			if(!countinv("FinisherToken"))
			{
				return state("See");
			}
			if(getcvar(be_NoisyStagger) && countinv("PainSoundToken"))
			{ 
				A_Pain; 
				A_TakeInventory("PainSoundToken");
			}
			return state(0);
		}
		"####" "#" 0 A_SpawnItem("HeadshotTarget4b", 0, 56,0)
		"####" "#" 0
		Loop
	
	Death.GloryKill:
		TNT1 A 0 A_GiveToTarget("BPtoken",3)
		Goto Death.Fatality
		
	Death.Crucible:
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataMed",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.cut	
		
	Death.GloryFire:
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawnHigh",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.Flames	
	
	Pain.GloryFire:
		TNT1 A 0 A_Jump(192, "See")
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawnHigh",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto See
	
	Death.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataMed",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.ExtremePunches
  
	Pain.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		Goto Super::Pain.ExtremePunches
		
	Death.Fatality:
		TNT1 A 0 A_SpawnItemEx("GloryHightPinataSpawn",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		TNT1 A 0 A_GiveToTarget("GoFatality", 1)
        TNT1 A 0 A_GiveToTarget("CyberBaronFatality1", 1)
        TNT1 A 1 A_NoBlocking
        TNT1 A 0 A_BossDeath
		Stop
	}
}

Actor PB_CyberKnightGK: PB_CyberKnight Replaces PB_CyberKnight
{
	DropItem "DemonStrengthRune" 3
	DropItem "DemonStrengthRune" 7
	DropItem "HasteSphere" 6
	DropItem "DoubleSphere" 5
	DropItem "Demonpickup2" 90
    DropItem "Demonpickup" 196
	DropItem "Crucible" 4
	WoundHealth 150
	
	States 
	{
	Wound:
		"####" "#" 1
		{
			if(GetCvar("be_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("HellKnightHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the monster heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
					A_GiveToTarget("BloodPunchKilled",1); // Check BloodPunch
				}
				
				if(GetCvar(be_MonsterStagger)==1) //will the monsters stagger at all?
				{
					return state("Stagger");	//stays there for a few seconds
				}
				else
				{
					return state(0);
				}
			}
			return state(0);
		}
		Goto See
	Stagger:
		CYUS J 0 
		{
			if(getcvar(be_ExecutionHighlight)==1)
			{	return state("PrepareStaggerHighlight");}
			else
			{	return state("StagLooper");	}
		}
		Goto StagLooper
	PrepareStaggerHighlight:
		//RFTR X 0
		CYGS J 0
		Goto StagLooper
	
	StagLooper:
		"####" "#" 4
		{
			if(!countinv("FinisherToken"))
			{
				return state("See");
			}
			if(getcvar(be_NoisyStagger) && countinv("PainSoundToken"))
			{ 
				A_Pain; 
				A_TakeInventory("PainSoundToken");
			}
			return state(0);
		}
		"####" "#" 0 A_SpawnItem("HeadshotTarget4b", 0, 56,0)
		"####" "#" 0
		Loop
	
	Death.GloryKill:
		TNT1 A 0 A_GiveToTarget("BPtoken",3)
		Goto Death.Fatality
  
  	Death.Crucible:
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataMed",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.cut
		
	Death.GloryFire:
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawnHigh",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.Flames

	Pain.GloryFire:
		TNT1 A 0 A_Jump(192, "See")
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawnHigh",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto See
	
	Death.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataMed",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.ExtremePunches
  
	Pain.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		Goto Super::Pain.ExtremePunches
		
	Death.Fatality:
		TNT1 A 0 A_SpawnItemEx("GloryHightPinataSpawn",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		TNT1 A 0 A_Jump(256, "Fatality1", "Fatality2")
		Stop
	}
}

ACTOR PB_CyberPaladinGK: PB_CyberPaladin replaces PB_CyberPaladin
{
	DropItem "DemonStrengthRune" 7
	DropItem "HasteSphere" 6
	DropItem "DoubleSphere" 5
	DropItem "Demonpickup2" 90
    DropItem "Demonpickup" 196
	DropItem "Crucible" 4
	WoundHealth 165
	
	States
	{ 
	Wound:
		"####" "#" 1
		{
			if(GetCvar("be_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("HellKnightHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the monster heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
					A_GiveToTarget("BloodPunchKilled",1); // Check BloodPunch
				}
				
				if(GetCvar(be_MonsterStagger)==1) //will the monsters stagger at all?
				{
					return state("Stagger");	//stays there for a few seconds
				}
				else
				{
					return state(0);
				}
			}
			return state(0);
		}
		Goto See
	Stagger:
		HPAL P 0 
		{
			if(getcvar(be_ExecutionHighlight)==1)
			{	return state("PrepareStaggerHighlight");}
			else
			{	return state("StagLooper");	}
		}
		Goto StagLooper
	PrepareStaggerHighlight:
		//RFTR X 0
		HPGL P 3
		Goto StagLooper
	
	StagLooper:
		"####" "#" 4
		{
			if(!countinv("FinisherToken"))
			{
				return state("See");
			}
			if(getcvar(be_NoisyStagger) && countinv("PainSoundToken"))
			{ 
				A_Pain; 
				A_TakeInventory("PainSoundToken");
			}
			return state(0);
		}
		"####" "#" 0 A_SpawnItem("HeadshotTarget4b", 0, 56,0)
		"####" "#" 0
		Loop
	
	Death.GloryKill:
		TNT1 A 0 A_GiveToTarget("BPtoken",4)
		Goto Death.Fatality
		
	Death.Crucible:
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataHight",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.cut
	
	Death.GloryFire:
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawnHigh",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.Flames
	
	Pain.GloryFire:
		TNT1 A 0 A_Jump(192, "See")
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawnHigh",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto See
	
	Death.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataHight",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.ExtremePunches
	
	Pain.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		Goto Super::Pain.Stun

	Death.Fatality:
		TNT1 A 0 A_SpawnItemEx("GloryHightPinataSpawn",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		TNT1 A 0 A_GiveToTarget("GoFatality", 1)
        TNT1 A 0 A_GiveToTarget("CyberPaladinFatality1", 1)
        TNT1 A 1 A_BossDeath
		Stop
	}
}

Actor PB_InfernusGK : PB_Infernus replaces PB_Infernus
{
	DropItem "Demonpickup2" 76
	DropItem "Demonpickup2" 76
	DropItem "Demonpickup2" 76
	DropItem "Crucible" 6
	WoundHealth 300
  
	States
	{
	Wound:
		"####" "#" 1
		{
			if(GetCvar("be_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("HellKnightHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the monster heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
					A_GiveToTarget("BloodPunchKilled",1); // Check BloodPunch
				}
				
				if(GetCvar(be_MonsterStagger)==1) //will the monsters stagger at all?
				{
					return state("Stagger");	//stays there for a few seconds
				}
				else
				{
					return state(0);
				}
			}
			return state(0);
		}
		Goto See
	Stagger:
		BRUS N 0 
		{
			if(getcvar(be_ExecutionHighlight)==1)
			{	return state("PrepareStaggerHighlight");}
			else
			{	return state("StagLooper");	}
		}
		Goto StagLooper
	PrepareStaggerHighlight:
		//RFTR X 0
		BRGS N 5
		Goto StagLooper
	
	StagLooper:
		"####" "#" 4
		{
			if(!countinv("FinisherToken"))
			{
				return state("See");
			}
			if(getcvar(be_NoisyStagger) && countinv("PainSoundToken"))
			{ 
				A_Pain; 
				A_TakeInventory("PainSoundToken");
			}
			return state(0);
		}
		"####" "#" 0 A_SpawnItem("HeadshotTarget4b", 0, 56,0)
		"####" "#" 0
		Loop
	
	Death.GloryKill:
		TNT1 A 0 A_GiveToTarget("BPtoken",4)
		Goto Death.Fatality
  
  	Death.Crucible:
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataHight",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.cut
  
  	Death.GloryFire:
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawnHigh",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.Flames
  
	Pain.GloryFire:
		TNT1 A 0 A_Jump(192, "See")
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawnHigh",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto See
  
	Death.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataHight",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.ExtremePunches
  
	Pain.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		Goto Super::Pain.ExtremePunches
	
	Death.Fatality:
	    TNT1 A 0
		TNT1 A 0 A_Pain
		TNT1 A 0 A_SpawnItemEx("GloryHightPinataSpawn",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		
		TNT1 A 0 A_GiveToTarget("GoFatality", 1)
        TNT1 A 0 A_GiveToTarget("BruiserFatality", 1)
        TNT1 A 1 A_NoBlocking
        TNT1 A 0 A_BossDeath
		Stop
		
	}
}

ACTOR PB_KnightGK : PB_Knight Replaces PB_Knight
{
	DropItem "DemonStrengthRune" 3
	DropItem "Demonpickup2" 50
	DropItem "Demonpickup" 196
	DropItem "Crucible" 4
	WoundHealth 100
	States
	{
	Wound:
		"####" "#" 1
		{
			if(GetCvar("be_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("HellKnightHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the monster heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
					A_GiveToTarget("BloodPunchKilled",1); // Check BloodPunch
				}
				
				if(GetCvar(be_MonsterStagger)==1) //will the monsters stagger at all?
				{
					return state("Stagger");	//stays there for a few seconds
				}
				else
				{
					return state(0);
				}
			}
			return state(0);
		}
		Goto See
	Stagger:
		BOS2 H 0 
		{
			if(getcvar(be_ExecutionHighlight)==1)
			{	return state("PrepareStaggerHighlight");}
			else
			{	return state("StagLooper");	}
		}
		Goto StagLooper
	PrepareStaggerHighlight:
		//RFTR X 0
		BGS2 H 0
		Goto StagLooper
	
	StagLooper:
		"####" "#" 4
		{
			if(!countinv("FinisherToken"))
			{
				return state("See");
			}
			if(getcvar(be_NoisyStagger) && countinv("PainSoundToken"))
			{ 
				A_Pain; 
				A_TakeInventory("PainSoundToken");
			}
			return state(0);
		}
		"####" "#" 0 A_SpawnItem("HeadshotTarget4b", 0, 56,0)
		"####" "#" 0
		Loop
	
	Death.GloryKill:
		TNT1 A 0 A_GiveToTarget("BPtoken",3)
		Goto Death.Fatality
	
	Death.Crucible:
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataMed",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.cut
	
	Death.GloryFire:
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawnHigh",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.Flames
	
	Pain.GloryFire:
		TNT1 A 0 A_Jump(192, "See")
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawnHigh",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto See
	
	Death.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataMed",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.ExtremePunches
	
	Pain.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		Goto Super::Pain.ExtremePunches
		
	 Death.Fatality:
	    TNT1 A 0 A_Pain
		TNT1 A 0 A_SpawnItemEx("GloryMedPinataSpawn2",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		TNT1 A 0 A_GiveToTarget("GoFatality", 1)
		TNT1 A 0 A_Jump(128, "Death.Fatality3", "Death.Fatality4")
        TNT1 A 0 A_GiveToTarget("HKFatality", 1)
        TNT1 A 1 A_NoBlocking
        TNT1 A 0 A_BossDeath
		Stop	
	}
}