ACTOR PB_BeamRevGK : PB_BeamRev Replaces PB_BeamRev
{
	DropItem "Demonpickup2" 80
	DropItem "Demonpickup" 255
	DropItem "Crucible" 6
	WoundHealth 80
	
	States
	{
	Wound:
		"####" "#" 1
		{
			if(GetCvar("be_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("RevenantHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the monster heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
					A_GiveToTarget("BloodPunchKilled",1); // Check BloodPunch
				}
				
				if(GetCvar(be_MonsterStagger)==1) //will the monsters stagger at all?
				{
					return state("Stagger");	//stays there for a few seconds
				}
				else
				{
					return state(0);
				}
			}
			return state(0);
		}
		Goto See
	Stagger:
		R4SK L 0 
		{
			if(getcvar(be_ExecutionHighlight)==1)
			{	return state("PrepareStaggerHighlight");}
			else
			{	return state("StagLooper");	}
		}
		Goto StagLooper
	PrepareStaggerHighlight:
		//RFTR X 0
		R4GK L 5
		Goto StagLooper
	
	StagLooper:
		"####" "#" 4
		{
			if(!countinv("FinisherToken"))
			{
				return state("See");
			}
			if(getcvar(be_NoisyStagger) && countinv("PainSoundToken"))
			{ 
				A_Pain; 
				A_TakeInventory("PainSoundToken");
			}
			return state(0);
		}
		"####" "#" 0 A_SpawnItem("HeadshotTarget4", 0, 70, 0)
		"####" "#" 0
		Loop
	
	Death.GloryKill:
		TNT1 A 0 A_GiveToTarget("BPtoken",3)
		Goto Death.Fatality

	Death.Crucible:
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataMed",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.cut	  

	Death.GloryFire:
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawn",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.Flames
		
	Death.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataHight",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.Railgun
		
	Pain.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		Goto Super::Pain.ExtremePunches
		
	Death.Fatality:
        TNT1 A 0 A_NoBlocking
		TNT1 A 0
		TNT1 A 0 A_SpawnItemEx("GloryMedPinataSpawn2",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
	//	TNT1 A 0 A_JumpIfIntargetInventory("FistsSelected", 1, 1)
	//	Goto Death
		TNT1 A 0 A_GiveToTarget("GoFatality", 1)
        TNT1 A 0 A_GiveToTarget("BeamRevenantFatality1", 1)
        Stop	
	}
}

ACTOR PB_DraugrGK : PB_Draugr Replaces PB_Draugr
{
	DropItem "Demonpickup2" 80
	DropItem "Demonpickup" 255
	DropItem "Crucible" 6
	WoundHealth 110
   
	States
	{
	Wound:
		"####" "#" 1
		{
			if(GetCvar("be_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("RevenantHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the monster heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
					A_GiveToTarget("BloodPunchKilled",1); // Check BloodPunch
				}
				
				if(GetCvar(be_MonsterStagger)==1) //will the monsters stagger at all?
				{
					return state("Stagger");	//stays there for a few seconds
				}
				else
				{
					return state(0);
				}
			}
			return state(0);
		}
		Goto See
	Stagger:
		SKE2 M 0 
		{
			if(getcvar(be_ExecutionHighlight)==1)
			{	return state("PrepareStaggerHighlight");}
			else
			{	return state("StagLooper");	}
		}
		Goto StagLooper
	PrepareStaggerHighlight:
		//RFTR X 0
		SKG2 M 5
		Goto StagLooper
	
	StagLooper:
		"####" "#" 4
		{
			if(!countinv("FinisherToken"))
			{
				return state("See");
			}
			if(getcvar(be_NoisyStagger) && countinv("PainSoundToken"))
			{ 
				A_Pain; 
				A_TakeInventory("PainSoundToken");
			}
			return state(0);
		}
		"####" "#" 0 A_SpawnItem("HeadshotTarget4", 0, 70, 0)
		"####" "#" 0
		Loop
	
	Death.GloryKill:
		TNT1 A 0 A_GiveToTarget("BPtoken",3)
		Goto Death.Fatality
  
  	Death.Crucible:
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataMed",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.cut	
  
  	Death.GloryFire:
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawnHigh",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.Flames
  
	Death.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataHight",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.Railgun
		
	Pain.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		Goto Super::Pain.ExtremePunches
		
	Death.Fatality:
        TNT1 A 0 A_NoBlocking
		TNT1 A 0
		TNT1 A 0 A_SpawnItemEx("GloryMedPinataSpawn2",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
	//	TNT1 A 0 A_JumpIfIntargetInventory("FistsSelected", 1, 1)
	//	Goto Death
		TNT1 A 0 A_GiveToTarget("GoFatality", 1)
        TNT1 A 0 A_GiveToTarget("DraugrFatality", 1)
        Stop	
	}
}

ACTOR PB_RevenantGK : PB_Revenant Replaces PB_Revenant
{
	DropItem "Demonpickup2" 50
	DropItem "Demonpickup" 255
	DropItem "Crucible" 6
	WoundHealth 80
	
	States
	{
	Wound:
		"####" "#" 1
		{
			if(GetCvar("be_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("RevenantHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the monster heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
					A_GiveToTarget("BloodPunchKilled",1); // Check BloodPunch
				}
				
				if(GetCvar(be_MonsterStagger)==1) //will the monsters stagger at all?
				{
					return state("Stagger");	//stays there for a few seconds
				}
				else
				{
					return state(0);
				}
			}
			return state(0);
		}
		Goto See
	Stagger:
		SKEL L 0 
		{
			if(getcvar(be_ExecutionHighlight)==1)
			{	return state("PrepareStaggerHighlight");}
			else
			{	return state("StagLooper");	}
		}
		Goto StagLooper
	PrepareStaggerHighlight:
		//RFTR X 0
		SKGL L 0
		Goto StagLooper
	
	StagLooper:
		"####" "#" 4
		{
			if(!countinv("FinisherToken"))
			{
				return state("See");
			}
			if(getcvar(be_NoisyStagger) && countinv("PainSoundToken"))
			{ 
				A_Pain; 
				A_TakeInventory("PainSoundToken");
			}
			return state(0);
		}
		"####" "#" 0 A_SpawnItem("HeadshotTarget4", 0, 70, 0)
		"####" "#" 0
		Loop
	
	Death.GloryKill:
		TNT1 A 0 A_GiveToTarget("BPtoken",3)
		Goto Death.Fatality
	
	Death.Crucible:
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataMed",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.cut
	
	Death.GloryFire:
		TNT1 A 0 A_SpawnItemEx("FlamePinataSpawn",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.Flames
	
	Death.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SpawnItemEx("GlorySawPinataMed",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
		Goto Super::Death.Railgun
	
	Pain.BloodPunch:
		TNT1 A 0 A_GiveToTarget("BloodPunchKilled",1)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		TNT1 A 0	A_SpawnItemEx("BloodpunchWave", 0, 0, Height / 2, 0, 0, 0, 0, SXF_CLIENTSIDE|SXF_TRANSFERPITCH)
		Goto Super::Pain.ExtremePunches

	Death.Fatality:
        TNT1 A 0 A_NoBlocking
		TNT1 A 0
		TNT1 A 0 A_SpawnItemEx("GloryMedPinataSpawn2",0,0,Height / 2,random(0,8),0,random(0,8),random(0,360))
	//	TNT1 A 0 A_JumpIfIntargetInventory("FistsSelected", 1, 1)
	//	Goto Death
		TNT1 A 0 A_GiveToTarget("GoFatality", 1)
        TNT1 A 0 A_Jump(128,5)
        TNT1 A 0 A_GiveToTarget("RevenantFatality", 1)
        Stop
        TNT1 AAAAAAA 0
        TNT1 A 0 A_GiveToTarget("RevenantFatality2", 1)
        TNT1 A 1
        TNT1 A 0
		Stop
	}
}